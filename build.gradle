apply plugin: 'groovy'
apply from: 'http://www.tellurianring.com/projects/gradle-plugins/gradle-templates/apply.groovy'

/*
 * BPIPE CONFIG BUILD SCRIPT
 * 
 * use groovy templates: https://github.com/townsfolk/gradle-templates
 * based on: http://www.gradle.org/docs/current/userguide/tutorial_groovy_projects.html
 * Use STAGE to make a libexec like dir.
 *
 */

version = "0.1"

project.ext {
	STAGE="build/stage/bpipeconfig-$version"	
}

// Repos
repositories {
    mavenCentral()
}

// The script is all Groovy, so we make use of all methods and features.
dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy', version: '2.1.7'
    compile files(fileTree(dir:'local-lib', includes:['*.jar']))
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

// STAGE TASK
task stage(dependsOn: jar) << {
	ant.mkdir(dir: project.STAGE)
	ant.mkdir(dir: "$project.STAGE/bin")
	ant.mkdir(dir: "$project.STAGE/lib")
  ant.mkdir(dir: "$project.STAGE/templates")
  ant.mkdir(dir: "$project.STAGE/config")

	ant.copy(todir: "$project.STAGE/bin") {
    	ant.fileset(dir: 'bin', includes: "**")
  }
  ant.copy(todir: "$project.STAGE/templates") {
    ant.fileset(dir: 'templates', includes: "**")
  }
  ant.copy(todir: "$project.STAGE/config") {
    ant.fileset(dir: 'config', includes: "**")
  }

	new File(STAGE+'/bin/bpipe-config').text = 
        new File("bin/bpipe-config").text.replaceAll("VERSION=0.0.0","VERSION=$version").replaceAll("BUILDDATE=0","BUILDDATE="+String.valueOf(System.currentTimeMillis()))

  ant.copy(todir: "$project.STAGE/lib") {
  	ant.fileset(dir: 'local-lib', includes: "*.jar")
  	ant.fileset(dir: 'build/libs', includes: "bpipe_config-${version}.jar")
  }  
  // change permissions in bin
  ant.chmod( dir: "$project.STAGE/bin", perm: "755", includes: "*")      
}